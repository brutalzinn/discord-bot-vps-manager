name: Deploy de produção

on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:    
      # Push events on main branch
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
  
    - name: Copy repository contents via scp
      uses: appleboy/scp-action@master
      env:
        HOST: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSHKEY }}
      with:
        source: "."
        target: "/home/brutalzinn/discord/boberto"

    - name: Adicionado chave do Discord
      uses: appleboy/ssh-action@master
      env:
        DISCORD_KEY: ${{ secrets.DISCORD }}
        DISCORD_URL: ${{ secrets.DISCORD_URL }}
        BOBERTO_JWT: ${{ secrets.BOBERTO_JWT }}
        BOBERTO_DATABASE: ${{ secrets.BOBERTO_DATABASE }}
        BOBERTO_HOST: ${{ secrets.BOBERTO_HOST }}
        BOBERTO_USER: ${{ secrets.BOBERTO_USER }}
        BOBERTO_PASSWORD: ${{ secrets.BOBERTO_PASSWORD }}
        BOBERTO_PORT: ${{ secrets.BOBERTO_PORT }}
        API_PORT: ${{ secrets.API_PORT }}
        REDIS_PASSWORD: ${{ secrets.REDIS_PASSWORD }}
        REDIS_PORT: ${{ secrets.REDIS_PORT }}
        API_TOKEN: ${{ secrets.API_TOKEN }}
        URL: ${{ secrets.URL }}
        JWT_API_SECRET: ${{ secrets.JWT_API_SECRET }}

      with:
        host: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSHKEY }}
        envs: DISCORD_KEY, DISCORD_URL, BOBERTO_JWT, BOBERTO_DATABASE, BOBERTO_USER, BOBERTO_PASSWORD, BOBERTO_PORT, BOBERTO_HOST, URL, API_TOKEN, REDIS_PORT, REDIS_PASSWORD, API_PORT, JWT_API_SECRET
        script: |
          sudo rm -f .env
          echo "DISCORD_TOKEN=$DISCORD_KEY" >/home/brutalzinn/discord/boberto/.env
          echo "DISCORD_URL=$DISCORD_URL" >>/home/brutalzinn/discord/boberto/.env
          echo "BOBERTO_HOST=$BOBERTO_HOST" >>/home/brutalzinn/discord/boberto/.env
          echo "JWT_SECRET=$BOBERTO_JWT" >>/home/brutalzinn/discord/boberto/.env
          echo "BOBERTO_DATABASE=$BOBERTO_DATABASE" >>/home/brutalzinn/discord/boberto/.env
          echo "BOBERTO_USER=$BOBERTO_USER" >>/home/brutalzinn/discord/boberto/.env
          echo "BOBERTO_PASSWORD=$BOBERTO_PASSWORD" >>/home/brutalzinn/discord/boberto/.env
          echo "BOBERTO_PORT=$BOBERTO_PORT" >>/home/brutalzinn/discord/boberto/.env
          echo "API_PORT=$API_PORT" >>/home/brutalzinn/discord/boberto/.env
          echo "REDIS_PASSWORD=$REDIS_PASSWORD" >>/home/brutalzinn/discord/boberto/.env
          echo "REDIS_PORT=$REDIS_PORT" >>/home/brutalzinn/discord/boberto/.env
          echo "API_TOKEN=$API_TOKEN" >>/home/brutalzinn/discord/boberto/.env
          echo "URL=$URL" >>/home/brutalzinn/discord/boberto/.env
          echo "JWT_API_SECRET=$JWT_API_SECRET" >>/home/brutalzinn/discord/boberto/.env
          echo "ENVIROMENT=PRODUCTION" >>/home/brutalzinn/discord/boberto/.env

    - name: Disparando notificação no Discord pré deploy
      uses: appleboy/ssh-action@master
      env:
        DISCORD_URL: ${{ secrets.DISCORD_URL }}
      with:
        host: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSHKEY }}
        envs: DISCORD_URL
        script: |
          DATA=$(date '+%d-%m-%Y %H:%M:%S') &&
          CONTENT="Preparando para atualizar o boberto... - $DATA" &&
          curl -X POST -H 'Content-Type: application/json' -d '{"content":"'"$CONTENT"'"}' $DISCORD_URL


    - name: Executando docker compose
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSHKEY }}
        script_stop: true
        script: |
          cd /home/brutalzinn/discord/boberto
          docker-compose down >> compose.log 2>&1 &
          docker rm -f $(docker ps -a -q) >> compose.log 2>&1 &
          docker volume rm $(docker volume ls -q) >> compose.log 2>&1 &
          docker-compose up -d >> compose.log 2>&1 &

    - name: Disparando notificação no Discord
      uses: appleboy/ssh-action@master
      env:
        DISCORD_URL: ${{ secrets.DISCORD_URL }}
      with:
        host: ${{ secrets.HOST }}
        USERNAME: ${{ secrets.USERNAME }}
        PORT: ${{ secrets.PORT }}
        KEY: ${{ secrets.SSHKEY }}
        envs: DISCORD_URL
        script: |
          DATA=$(date '+%d-%m-%Y %H:%M:%S') &&
          CONTENT="O deploy do boberto foi um sucesso. $DATA" &&
          curl -X POST -H 'Content-Type: application/json' -d '{"content":"'"$CONTENT"'"}' $DISCORD_URL